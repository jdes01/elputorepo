version: '3.8'

services:
  api:
    build: 
      context: .
      dockerfile: ./apps/api/Dockerfile
      args:
        DEBUG: 1
    ports:  
      - "8000:8000"
      - "5678:5678"
    environment:
      PYTHONPATH: /app/api/src
      POSTGRES_URI: postgresql://myuser:mypassword@db:5432/mydatabase
      
    volumes:
      - ./apps/api/src:/app/api/src
      - ./apps/api/scripts:/app/api/scripts
      - ./packages/logger:/packages/logger
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser", "-d", "mydatabase"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user@user.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./.pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_LOG_LEVEL=warn
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      loki:
        condition: service_healthy

  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - 3100:3100
    volumes:
      - ./loki-config.yml:/etc/loki/config.yaml
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 10s
      retries: 5
      start_period: 5s

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    environment:
      - LOG_LEVEL=warn
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
    command: ["-config.file=/etc/promtail/config.yaml"]
    depends_on:
      - loki
    networks:
      - app-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - "8080:8080"
    depends_on:
      - keycloak-db
    command:
      - start-dev
    networks:
      - app-network

  keycloak-db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "myuser", "-d", "mydatabase"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5433:5432"
    volumes:
      - pgdata-keycloak:/var/lib/postgresql/data
    networks:
      - app-network


networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  pgadmin-data:
  grafana-data:
  pgdata-keycloak:
